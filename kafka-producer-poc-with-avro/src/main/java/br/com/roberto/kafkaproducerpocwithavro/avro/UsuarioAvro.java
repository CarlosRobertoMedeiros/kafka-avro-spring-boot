/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package br.com.roberto.kafkaproducerpocwithavro.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class UsuarioAvro extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -6163395790876494469L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"UsuarioAvro\",\"namespace\":\"br.com.roberto.kafkaproducerpocwithavro.avro\",\"fields\":[{\"name\":\"nome\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"endereco\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"idade\",\"type\":\"int\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<UsuarioAvro> ENCODER =
      new BinaryMessageEncoder<UsuarioAvro>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<UsuarioAvro> DECODER =
      new BinaryMessageDecoder<UsuarioAvro>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<UsuarioAvro> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<UsuarioAvro> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<UsuarioAvro> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<UsuarioAvro>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this UsuarioAvro to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a UsuarioAvro from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a UsuarioAvro instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static UsuarioAvro fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.lang.String nome;
   private java.lang.String endereco;
   private int idade;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public UsuarioAvro() {}

  /**
   * All-args constructor.
   * @param nome The new value for nome
   * @param endereco The new value for endereco
   * @param idade The new value for idade
   */
  public UsuarioAvro(java.lang.String nome, java.lang.String endereco, java.lang.Integer idade) {
    this.nome = nome;
    this.endereco = endereco;
    this.idade = idade;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return nome;
    case 1: return endereco;
    case 2: return idade;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: nome = (java.lang.String)value$; break;
    case 1: endereco = (java.lang.String)value$; break;
    case 2: idade = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'nome' field.
   * @return The value of the 'nome' field.
   */
  public java.lang.String getNome() {
    return nome;
  }



  /**
   * Gets the value of the 'endereco' field.
   * @return The value of the 'endereco' field.
   */
  public java.lang.String getEndereco() {
    return endereco;
  }



  /**
   * Gets the value of the 'idade' field.
   * @return The value of the 'idade' field.
   */
  public int getIdade() {
    return idade;
  }



  /**
   * Creates a new UsuarioAvro RecordBuilder.
   * @return A new UsuarioAvro RecordBuilder
   */
  public static br.com.roberto.kafkaproducerpocwithavro.avro.UsuarioAvro.Builder newBuilder() {
    return new br.com.roberto.kafkaproducerpocwithavro.avro.UsuarioAvro.Builder();
  }

  /**
   * Creates a new UsuarioAvro RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new UsuarioAvro RecordBuilder
   */
  public static br.com.roberto.kafkaproducerpocwithavro.avro.UsuarioAvro.Builder newBuilder(br.com.roberto.kafkaproducerpocwithavro.avro.UsuarioAvro.Builder other) {
    if (other == null) {
      return new br.com.roberto.kafkaproducerpocwithavro.avro.UsuarioAvro.Builder();
    } else {
      return new br.com.roberto.kafkaproducerpocwithavro.avro.UsuarioAvro.Builder(other);
    }
  }

  /**
   * Creates a new UsuarioAvro RecordBuilder by copying an existing UsuarioAvro instance.
   * @param other The existing instance to copy.
   * @return A new UsuarioAvro RecordBuilder
   */
  public static br.com.roberto.kafkaproducerpocwithavro.avro.UsuarioAvro.Builder newBuilder(br.com.roberto.kafkaproducerpocwithavro.avro.UsuarioAvro other) {
    if (other == null) {
      return new br.com.roberto.kafkaproducerpocwithavro.avro.UsuarioAvro.Builder();
    } else {
      return new br.com.roberto.kafkaproducerpocwithavro.avro.UsuarioAvro.Builder(other);
    }
  }

  /**
   * RecordBuilder for UsuarioAvro instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<UsuarioAvro>
    implements org.apache.avro.data.RecordBuilder<UsuarioAvro> {

    private java.lang.String nome;
    private java.lang.String endereco;
    private int idade;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(br.com.roberto.kafkaproducerpocwithavro.avro.UsuarioAvro.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.nome)) {
        this.nome = data().deepCopy(fields()[0].schema(), other.nome);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.endereco)) {
        this.endereco = data().deepCopy(fields()[1].schema(), other.endereco);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.idade)) {
        this.idade = data().deepCopy(fields()[2].schema(), other.idade);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
    }

    /**
     * Creates a Builder by copying an existing UsuarioAvro instance
     * @param other The existing instance to copy.
     */
    private Builder(br.com.roberto.kafkaproducerpocwithavro.avro.UsuarioAvro other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.nome)) {
        this.nome = data().deepCopy(fields()[0].schema(), other.nome);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.endereco)) {
        this.endereco = data().deepCopy(fields()[1].schema(), other.endereco);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.idade)) {
        this.idade = data().deepCopy(fields()[2].schema(), other.idade);
        fieldSetFlags()[2] = true;
      }
    }

    /**
      * Gets the value of the 'nome' field.
      * @return The value.
      */
    public java.lang.String getNome() {
      return nome;
    }


    /**
      * Sets the value of the 'nome' field.
      * @param value The value of 'nome'.
      * @return This builder.
      */
    public br.com.roberto.kafkaproducerpocwithavro.avro.UsuarioAvro.Builder setNome(java.lang.String value) {
      validate(fields()[0], value);
      this.nome = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'nome' field has been set.
      * @return True if the 'nome' field has been set, false otherwise.
      */
    public boolean hasNome() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'nome' field.
      * @return This builder.
      */
    public br.com.roberto.kafkaproducerpocwithavro.avro.UsuarioAvro.Builder clearNome() {
      nome = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'endereco' field.
      * @return The value.
      */
    public java.lang.String getEndereco() {
      return endereco;
    }


    /**
      * Sets the value of the 'endereco' field.
      * @param value The value of 'endereco'.
      * @return This builder.
      */
    public br.com.roberto.kafkaproducerpocwithavro.avro.UsuarioAvro.Builder setEndereco(java.lang.String value) {
      validate(fields()[1], value);
      this.endereco = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'endereco' field has been set.
      * @return True if the 'endereco' field has been set, false otherwise.
      */
    public boolean hasEndereco() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'endereco' field.
      * @return This builder.
      */
    public br.com.roberto.kafkaproducerpocwithavro.avro.UsuarioAvro.Builder clearEndereco() {
      endereco = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'idade' field.
      * @return The value.
      */
    public int getIdade() {
      return idade;
    }


    /**
      * Sets the value of the 'idade' field.
      * @param value The value of 'idade'.
      * @return This builder.
      */
    public br.com.roberto.kafkaproducerpocwithavro.avro.UsuarioAvro.Builder setIdade(int value) {
      validate(fields()[2], value);
      this.idade = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'idade' field has been set.
      * @return True if the 'idade' field has been set, false otherwise.
      */
    public boolean hasIdade() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'idade' field.
      * @return This builder.
      */
    public br.com.roberto.kafkaproducerpocwithavro.avro.UsuarioAvro.Builder clearIdade() {
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public UsuarioAvro build() {
      try {
        UsuarioAvro record = new UsuarioAvro();
        record.nome = fieldSetFlags()[0] ? this.nome : (java.lang.String) defaultValue(fields()[0]);
        record.endereco = fieldSetFlags()[1] ? this.endereco : (java.lang.String) defaultValue(fields()[1]);
        record.idade = fieldSetFlags()[2] ? this.idade : (java.lang.Integer) defaultValue(fields()[2]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<UsuarioAvro>
    WRITER$ = (org.apache.avro.io.DatumWriter<UsuarioAvro>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<UsuarioAvro>
    READER$ = (org.apache.avro.io.DatumReader<UsuarioAvro>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.nome);

    out.writeString(this.endereco);

    out.writeInt(this.idade);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.nome = in.readString();

      this.endereco = in.readString();

      this.idade = in.readInt();

    } else {
      for (int i = 0; i < 3; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.nome = in.readString();
          break;

        case 1:
          this.endereco = in.readString();
          break;

        case 2:
          this.idade = in.readInt();
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










